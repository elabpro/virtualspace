        -:    0:Source:ConnectorDB.cpp
        -:    0:Graph:build/Debug/GNU-Linux/ConnectorDB.gcno
        -:    0:Data:build/Debug/GNU-Linux/ConnectorDB.gcda
        -:    0:Runs:2
        -:    0:Programs:2
        -:    1:/*
        -:    2: * To change this license header, choose License Headers in Project Properties.
        -:    3: * To change this template file, choose Tools | Templates
        -:    4: * and open the template in the editor.
        -:    5: */
        -:    6:
        -:    7:/* 
        -:    8: * File:   ConnectorDB.cpp
        -:    9: * Author: glebmillenium
        -:   10: * 
        -:   11: * Created on 18 февраля 2017 г., 1:58
        -:   12: */
        -:   13:
        -:   14:#include "ConnectorDB.h"
        -:   15:
        -:   16:#include "mysql_connection.h"
        -:   17:
        -:   18:#include "cppconn/driver.h"
        -:   19:#include "cppconn/exception.h"
        -:   20:#include "cppconn/resultset.h"
        -:   21:#include "cppconn/statement.h"
        -:   22:
        -:   23:using namespace std;
        -:   24:
function _ZN11ConnectorDBC2Ev called 0 returned 0% blocks executed 0%
    #####:   25:ConnectorDB::ConnectorDB() {
        -:   26:    //mysql_init(&mysql);
        -:   27:    //connection = mysql_real_connect(&mysql,"host","user",
        -:   28:    //                   "password","database",port,"unix_socket",clientflag);
        -:   29:    //connection = mysql_real_connect(&mysql,"localhost",
        -:   30:    //"vnc","1111","vncserver", 3306, 0, 0);
        -:   31:    try {
        -:   32:        sql::Driver *driver;
        -:   33:        sql::Connection *con;
        -:   34:        sql::Statement *stmt;
        -:   35:        sql::ResultSet *res;
        -:   36:
    #####:   37:        driver = get_driver_instance();
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:   38:
    =====:   39:    } catch (sql::SQLException &e) {
call    0 never executed
call    1 never executed
call    2 never executed
    =====:   40:        std::cout << "ERR: " << e.what();
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
        -:   41:    }
    #####:   42:}
branch  0 never executed
branch  1 never executed
call    2 never executed
        -:   43:
function _ZN11ConnectorDBC2ERKS_ called 0 returned 0% blocks executed 0%
    #####:   44:ConnectorDB::ConnectorDB(const ConnectorDB& orig) {
    #####:   45:}
        -:   46:
function _ZN11ConnectorDBD0Ev called 0 returned 0% blocks executed 0%
function _ZN11ConnectorDBD2Ev called 0 returned 0% blocks executed 0%
    #####:   47:ConnectorDB::~ConnectorDB() {
    #####:   48:}
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
        -:   49:
function _ZN11ConnectorDB3runEPc called 1 returned 100% blocks executed 57%
        1:   50:const char* ConnectorDB::run(char* condition) {
        1:   51:    cout << endl;
call    0 returned 100%
        -:   52:    const char* result;
        -:   53:    try {
        -:   54:        sql::Driver *driver;
        -:   55:        sql::Connection *con;
        -:   56:        
        -:   57:        sql::Statement *stmt;
        -:   58:        sql::ResultSet *res;
        -:   59:
        -:   60:        /* Create a connection */
        1:   61:        driver = get_driver_instance();
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        1:   62:        con = driver->connect("tcp://127.0.0.1:3306", "vnc", "1111");
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
branch  7 taken 100% (fallthrough)
branch  8 taken 0% (throw)
call    9 returned 100%
branch 10 taken 100% (fallthrough)
branch 11 taken 0% (throw)
call   12 returned 100%
call   13 returned 100%
call   14 returned 100%
call   15 never executed
call   16 never executed
call   17 never executed
        -:   63:        /* Connect to the MySQL test database */
        1:   64:        con->setSchema("vncserver");
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
call    7 never executed
        -:   65:        
        1:   66:        char* query = new char[256];
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        1:   67:        strcpy(query, "");
        1:   68:        strcat(query, "SELECT COUNT(*) FROM commands WHERE message = '");
        1:   69:        strcat(query, condition);
        1:   70:        strcat(query, "'");
        1:   71:        stmt = con->createStatement();
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        1:   72:        res = stmt->executeQuery(query);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
call    7 never executed
        1:   73:        res->next();
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        1:   74:        if (res->getInt(1) == 0) {
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
    #####:   75:            result = "неизвестная команда";
        -:   76:        } else {
        1:   77:            query = new char[256];
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        1:   78:            strcpy(query, "");
        1:   79:            strcat(query, "SELECT * FROM commands WHERE message = '");
        1:   80:            strcat(query, condition);
        1:   81:            strcat(query, "'");
        1:   82:            stmt = con->createStatement();
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        1:   83:            res = stmt->executeQuery(query);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
call    7 never executed
call    8 never executed
        3:   84:            while (res->next()) {
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
branch  3 taken 50% (fallthrough)
branch  4 taken 50%
        2:   85:                sql::SQLString str = res->getString("answer");
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
call    7 returned 100%
call    8 never executed
call    9 never executed
branch 10 never executed
branch 11 never executed
call   12 never executed
        2:   86:                sql::SQLString command = res->getString("id_command");
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
call    7 returned 100%
call    8 never executed
call    9 never executed
        1:   87:                query = new char[256];
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        -:   88:                /*strcpy(query, "");
        -:   89:                strcat(query, "INSERT INTO history  (id_command) VALUES('");
        -:   90:                strcat(query, command);
        -:   91:                strcat(query, "')");
        -:   92:                stmt->executeQuery(query);*/
        -:   93:                
        1:   94:                char* str2 = new char[str.length()];
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
       26:   95:                for(int i = 0; i < str.length(); i++){
call    0 returned 100%
branch  1 taken 96% (fallthrough)
branch  2 taken 4%
       25:   96:                    str2[i] = str[i];
call    0 returned 100%
        -:   97:                }
        1:   98:                result = str2;
        2:   99:                string console = res->getString("path_script");
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
call    7 returned 100%
branch  8 taken 100% (fallthrough)
branch  9 taken 0% (throw)
call   10 returned 100%
call   11 returned 100%
call   12 returned 100%
call   13 never executed
call   14 never executed
        1:  100:                system(console.c_str());
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
        -:  101:            }
        -:  102:        }
        1:  103:        delete res;
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
call    2 returned 100%
        1:  104:        delete stmt;
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
call    2 returned 100%
        1:  105:        delete con;
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
call    2 returned 100%
        1:  106:        return result;
    =====:  107:    } catch (sql::SQLException &e) {
call    0 never executed
call    1 never executed
call    2 never executed
    =====:  108:        cout << "# ERR: SQLException in " << __FILE__;
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
    =====:  109:        cout << "# ERR: " << e.what();
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
    =====:  110:        cout << " (MySQL error code: " << e.getErrorCode();
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
    =====:  111:        cout << ", SQLState: " << e.getSQLState() << " )" << endl;
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
branch 11 never executed
branch 12 never executed
        -:  112:
        -:  113:    }
    =====:  114:    result = "неизвестная команда";
    =====:  115:    return result;
function _GLOBAL__sub_I__ZN11ConnectorDBC2Ev called 2 returned 100% blocks executed 100%
function _Z41__static_initialization_and_destruction_0ii called 2 returned 100% blocks executed 100%
        6:  116:}
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0%
branch  3 taken 100% (fallthrough)
branch  4 taken 0%
        -:  117:
